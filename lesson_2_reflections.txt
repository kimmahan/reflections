Q: What happens when you initialize a repository? Why do you need to do it?
A: You are adding a .git file/directory, which contains required resources to track your changes. It is like turning version control on.


Q: How is the staging area different from the working directory and the repository? What value do you think it offers?
A: It is an in between step that gives you a chance to review changes before you commit them, and commit parts of changes while leving some you may not be ready to commit


Q: How can you use the staging area to make sure you have one commit per logical change?
A: you can add or remove files from the commit from here, rather than using the . or -A to add everything


Q:What are some situations when branches would be helpful in keeping your history organized? How would branches help?
A: They can allow you to have multiple thought trains in progress


Q:How do the diagrams help you visualize the branch structure?
A: Viewing them almost as train tracks, you can see where code is getting forked.

+  this.color    = 'black';
Coin = function ()

Q: What is the result of merging two branches together? Why do we represent it in the diagram tthe way we do?
A: Git combines the changes and tries to identify conflicts


Q: What are the pros and cons of Git's automatic merging vs. always doing merges manually?
A: It might take a little longer to track down changes, but prevents errors that could cause problems if merged manually

